{"ast":null,"code":"import { combineReducers, applyMiddleware } from \"redux\";\nimport { legacy_createStore as createStore } from 'redux';\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer } from './reducers/productReducer';\nimport productDetailsReducer from \"./reducers/productDetailsReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsreducer, userUpdateProfileReducer } from \"./reducers/userReducer\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListReducer } from \"./reducers/orderReducer\";\nvar reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsreducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderList: orderListReducer\n});\nvar shippingAddressfromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nvar userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userinfo')) : null;\nvar cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : null;\nvar initialState = {\n  cart: {\n    cartItems: cartItemsFromLocalStorage,\n    shippingAddress: shippingAddressfromLocalStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromLocalStorage\n  }\n};\nvar middleware = [thunk];\nvar store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\nexport default store;","map":{"version":3,"names":["combineReducers","applyMiddleware","legacy_createStore","createStore","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsreducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","orderList","shippingAddressfromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromLocalStorage","cartItemsFromLocalStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["/Users/sameergupta/Desktop/final_repo/ecommerce-mern/frontend/src/store.js"],"sourcesContent":["import { combineReducers, applyMiddleware } from \"redux\";\nimport { legacy_createStore as createStore} from 'redux';\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {productListReducer} from './reducers/productReducer'\nimport productDetailsReducer from \"./reducers/productDetailsReducer\";\nimport { cartReducer } from \"./reducers/cartReducer\";\nimport {userLoginReducer, userRegisterReducer, userDetailsreducer, userUpdateProfileReducer} from \"./reducers/userReducer\"\nimport { orderCreateReducer,orderDetailsReducer, orderPayReducer, orderListReducer } from \"./reducers/orderReducer\";\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart : cartReducer,\n    userLogin : userLoginReducer,\n    userRegister : userRegisterReducer,\n    userDetails : userDetailsreducer,\n    userUpdateProfile : userUpdateProfileReducer,\n    orderCreate : orderCreateReducer,\n    orderDetails : orderDetailsReducer,\n    orderPay : orderPayReducer,\n    orderList : orderListReducer,\n});\n\nconst shippingAddressfromLocalStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {};\n\nconst userInfoFromLocalStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userinfo')) : null\n\nconst cartItemsFromLocalStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : null\n\nconst initialState = {\n    cart : {cartItems : cartItemsFromLocalStorage, shippingAddress: shippingAddressfromLocalStorage},\n    userLogin : {userInfo: userInfoFromLocalStorage}\n}\nconst middleware = [thunk];\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,QAAiD,OAAjD;AACA,SAASC,kBAAkB,IAAIC,WAA/B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,kBAAR,QAAiC,2BAAjC;AACA,OAAOC,qBAAP,MAAkC,kCAAlC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,EAA+CC,kBAA/C,EAAmEC,wBAAnE,QAAkG,wBAAlG;AACA,SAASC,kBAAT,EAA4BC,mBAA5B,EAAiDC,eAAjD,EAAkEC,gBAAlE,QAA0F,yBAA1F;AAEA,IAAMC,OAAO,GAAGjB,eAAe,CAAC;EAC5BkB,WAAW,EAAEZ,kBADe;EAE5Ba,cAAc,EAAEZ,qBAFY;EAG5Ba,IAAI,EAAGZ,WAHqB;EAI5Ba,SAAS,EAAGZ,gBAJgB;EAK5Ba,YAAY,EAAGZ,mBALa;EAM5Ba,WAAW,EAAGZ,kBANc;EAO5Ba,iBAAiB,EAAGZ,wBAPQ;EAQ5Ba,WAAW,EAAGZ,kBARc;EAS5Ba,YAAY,EAAGZ,mBATa;EAU5Ba,QAAQ,EAAGZ,eAViB;EAW5Ba,SAAS,EAAGZ;AAXgB,CAAD,CAA/B;AAcA,IAAMa,+BAA+B,GAAGC,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACpCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADoC,GACkB,EAD1D;AAGA,IAAMG,wBAAwB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAAnH;AAEA,IAAMI,yBAAyB,GAAGL,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,IAAtH;AAEA,IAAMK,YAAY,GAAG;EACjBhB,IAAI,EAAG;IAACiB,SAAS,EAAGF,yBAAb;IAAwCG,eAAe,EAAET;EAAzD,CADU;EAEjBR,SAAS,EAAG;IAACkB,QAAQ,EAAEL;EAAX;AAFK,CAArB;AAIA,IAAMM,UAAU,GAAG,CAACpC,KAAD,CAAnB;AACA,IAAMqC,KAAK,GAAGtC,WAAW,CACrBc,OADqB,EAErBmB,YAFqB,EAGrB/B,mBAAmB,CAACJ,eAAe,MAAf,SAAmBuC,UAAnB,CAAD,CAHE,CAAzB;AAMA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}