{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from \"../constants/userConstants\";\nexport const logout = () => dispacth => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('userInfoofnewUser');\n  dispacth({\n    type: USER_LOGOUT\n  });\n};\nexport const login = (email, password) => async dispacth => {\n  try {\n    dispacth({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password,\n      config\n    });\n    dispacth({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispacth({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispacth => {\n  try {\n    dispacth({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password,\n      config\n    });\n    dispacth({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispacth({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    }); // localStorage.setItem('userInfo',JSON.stringify(data))\n  } catch (error) {\n    dispacth({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispacth, getState) => {\n  try {\n    dispacth({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`api/users/${userInfo._id}`, config);\n    dispacth({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispacth({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispacth, getState) => {\n  try {\n    dispacth({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('api/users/profile', user, config);\n    dispacth({\n      type: USER_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispacth({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport default {\n  login,\n  logout,\n  register,\n  getUserDetails\n};","map":{"version":3,"names":["axios","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_RESET","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","logout","dispacth","localStorage","removeItem","type","login","email","password","config","headers","data","post","payload","setItem","JSON","stringify","error","response","message","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","_id","updateUserProfile","user","put"],"sources":["/Users/sameergupta/Desktop/final_repo/ecommerce-mern/frontend/src/actions/userAction.js"],"sourcesContent":["import axios from 'axios';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL,USER_LOGOUT, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_SUCCESS,USER_UPDATE_FAIL,USER_UPDATE_REQUEST,USER_UPDATE_RESET} from \"../constants/userConstants\";\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL} from \"../constants/userConstants\";\nexport const logout = () => dispacth => {\n    localStorage.removeItem('userInfo')\n\n    localStorage.removeItem('userInfoofnewUser')\n    dispacth({type: USER_LOGOUT})\n}\nexport const login = (email, password) => async dispacth => {\n    try {\n        dispacth({type:USER_LOGIN_REQUEST})\n        const config = {headers: {'Content-Type' : 'application/json'}}\n        const {data} = await axios.post('/api/users/login', {email, password, config})\n        dispacth({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n        \n    localStorage.setItem('userInfo',JSON.stringify(data))\n    } catch (error) {\n        dispacth({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message: error.message\n        })\n    }\n}\nexport const register = (name, email, password) => async dispacth => {\n    try {\n        dispacth({type:USER_REGISTER_REQUEST})\n        const config = {headers: {'Content-Type' : 'application/json'}}\n        const {data} = await axios.post('/api/users', {name,email, password,config})\n        dispacth({\n            type: USER_REGISTER_SUCCESS,\n            payload:data,\n        })\n        dispacth({\n            type: USER_LOGIN_SUCCESS,\n            payload:data\n        })\n    // localStorage.setItem('userInfo',JSON.stringify(data))\n    } catch (error) {\n        dispacth({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message: error.message\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispacth, getState )=> {\n    try {\n        dispacth({\n            type: USER_DETAILS_REQUEST,\n        })\n        const {userLogin:{userInfo}} = getState();\n        const config = {headers: {'Content-Type' : 'application/json', Authorization:`Bearer ${userInfo.token}`}};\n        const {data} = await axios.get(`api/users/${userInfo._id}`,config)\n        \n        dispacth({\n            type: USER_DETAILS_SUCCESS,\n            payload : data\n        })\n        \n    } catch (error) {\n        dispacth({\n            type:USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message: error.message\n        })\n    }\n};\n\nexport const updateUserProfile = (user) => async(dispacth,getState) => {\n    try {\n        dispacth({\n            type: USER_UPDATE_REQUEST,\n        })\n        const {userLogin:{userInfo}} = getState()\n        const config = {headers: {'Content-Type' : 'application/json', Authorization:`Bearer ${userInfo.token}`}};\n        const {data} =  await axios.put('api/users/profile',user,config)\n        dispacth({\n            type: USER_UPDATE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispacth({\n            type: USER_UPDATE_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message: error.message\n        })\n    }\n}\n\nexport default {login,logout,register,getUserDetails}"],"mappings":"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"},"metadata":{},"sourceType":"module"}